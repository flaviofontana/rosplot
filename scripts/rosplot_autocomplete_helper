#!/usr/bin/env python
import roslib
roslib.load_manifest('rosplot')
import rospy
import os
import sys

pkg_path = roslib.packages.find_resource('rosplot', 'topic_tree.py')
sys.path.append(os.path.dirname(pkg_path[0]))

from topic_tree import *

class UniqueList(list):
    def __init__(self):
        super(list,self).__init__()
            
    def append(self, invalue):
        if invalue not in self:
            list.append(self,invalue)          

def path_to_children_of_current_base(topic_list,level):
    # level = 1 /*
    # level = 2 /nanoquad/*
    # level = 3 /nanoquad/optitrack/* 
    # generate a list with the children of the current base
    list_out = UniqueList()
    for topic in topic_list:
        splitted = topic.split("/")
        path_to_child = '/'.join(splitted[0:level+1])
        #if the child has children as well add the trailing / for autocompletion
        if len(splitted) > level+1:
           path_to_child += '/' 
        list_out.append( path_to_child )    
    return list_out

if __name__ == '__main__':   
    if( len(sys.argv) == 1 ): # only the script name
        base = '/'
    else:
        base = sys.argv[1];
    
    # get path to all fields
    path_tree = PathTree() 
    topic_list = path_tree.list
    list_out = path_to_children_of_current_base(topic_list,base.count('/'))
   
    str_out = ''    
    for topic in list_out:
        str_out += topic + ' '
    print str_out
    
 
    
  